using Parcare;

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

using static Parcare.Car;

namespace InterfataUtilizator_WindowsForms.Forms
{
    public partial class FormADD : Form
    {

        AdministrareMasini_FisierText adminCar;

        private string ID;
        private string Tip;
        private string Sold;

        public FormADD()
        {
            InitializeComponent();
          
            string locatieFisierSolutie = Path.Combine(Application.StartupPath, "NumeFisier.txt");
            adminCar = new AdministrareMasini_FisierText(locatieFisierSolutie);
            Car[] cars = adminCar.GetCars(out int nrCars);
        }

        private void LoadTheme()
        {
            foreach (Control btns in this.Controls)
            {
                if (btns.GetType() == typeof(Button))
                {
                    Button btn = (Button)btns;
                    btn.BackColor = ThemeColor.primaryColor;
                    btn.ForeColor = Color.White;
                    btn.FlatAppearance.BorderColor = ThemeColor.secondaryColor;
                }
            }
            btnImage.BackColor = ThemeColor.primaryColor;
            btnImage.ForeColor = Color.White;
            btnImage.FlatAppearance.BorderColor= ThemeColor.secondaryColor;
            panel1.BackColor = ThemeColor.primaryColor;
            panel2.BackColor = ThemeColor.secondaryColor;
            panel3.BackColor = ThemeColor.primaryColor;
            panel4.BackColor = ThemeColor.secondaryColor;

        }
        private void FormCars_Load(object sender, EventArgs e)
        {
            LoadTheme();
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        private void txtID_TextChanged(object sender, EventArgs e)
        {

        }

        private void textTip_TextChanged(object sender, EventArgs e)
        {

        }

        private void txtSOLD_TextChanged(object sender, EventArgs e)
        {

        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            ID = txtID.Text;
            Tip = txtTip.Text;
            Sold = txtSOLD.Text;
            double soldValue;
            CarType carType;
            // Convertim textul introdus în txtTip la formatul specificat în enum-ul CarType
            Tip = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(Tip.ToLower());
            // Convertim textul introdus în txtTip la valoarea corespunzătoare din enum-ul CarType
            Double.TryParse(Sold, out soldValue);
            int errorCode = ValidateInput(ID, Tip, Sold);
            if (!Enum.TryParse(Tip, true, out carType))
            {
                // Dacă nu se poate face conversia, afișăm un mesaj de eroare și ieșim din metoda BtnAdauga_click
                // string.Join(", ", Enum.GetNames(typeof(CarType))) imi afiseaza ce avem in enumerarea CarTYpe
                MessageBox.Show("Tipul introdus nu este valid. Vă rugăm să introduceți una din următoarele valori: " + string.Join(", ", Enum.GetNames(typeof(CarType))), "Eroare TIP", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            if (errorCode == 0)
            {
                Car c = new Car(ID, soldValue, carType);
                adminCar.AddCarFisier(c);
                ResetareControale();
            }
            else
            {
                MessageBox.Show("Introduceți informațiile corecte!", "Eroare", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            
        }
        private int ValidateInput(string ID, string tip, string Sold)
        {
            int errorCode = 0;

            if (string.IsNullOrEmpty(ID))
            {
                lblID.ForeColor = Color.Red;
                errorCode = 1;
            }
            else if (ID.Length > 7 || ID.Length < 5)
            {
                lblID.ForeColor = Color.Red;
                errorCode = 2;
            }
            else
            {
                lblID.ForeColor = Color.White;
            }

            if (string.IsNullOrEmpty(tip))
            {
                lblTip.ForeColor = Color.Red;
                errorCode = 3;
            }
            else if (tip.Length > 15)
            {
                lblTip.ForeColor = Color.Red;
                errorCode = 4;
            }
            else
            {
                lblTip.ForeColor = Color.White;
            }

            if (string.IsNullOrEmpty(Sold))
            {
                lblSold.ForeColor = Color.Red;
                errorCode = 5;
            }
            else
            {
                lblSold.ForeColor = Color.White;
            }

            // Verificați dacă imaginea nu a fost selectată
            if (string.IsNullOrEmpty(SelectedImagePath1) && numarClicuri==0)
            {
                lblImage.ForeColor = Color.Red;
                errorCode = 6;
            }
            else
            {
                lblImage.ForeColor = Color.White;
            }


            return errorCode;
        }

        private string SelectedImagePath1 { get; set; }
        public static class ImageCounter
        {
            public static int imageCounter = 1;
        }

        private int numarClicuri = 0;
        private void btnImage_Click(object sender, EventArgs e)
        {
            OpenFileDialog openFileDialog = new OpenFileDialog();
            openFileDialog.Filter = "Fișiere imagine (*.jpg, *.jpeg, *.png)|*.jpg;*.jpeg;*.png";
            openFileDialog.Title = "Selectați o imagine";

            if (openFileDialog.ShowDialog() == DialogResult.OK)
            {
                string imagePath = openFileDialog.FileName;
                string fileName = "poza" + ImageCounter.imageCounter + ".jpg";
                string destinationPath = Path.Combine("C:\\Users\\grati\\Desktop\\PIU\\PROIECT\\Parcare\\pozecars\\", fileName);
                File.Copy(imagePath, destinationPath, true);
                ImageCounter.imageCounter++;
                
                // Actualizați numele fișierului în funcție de valoarea actuală a imageCounter
                fileName = "poza" + ImageCounter.imageCounter + ".jpg";

                // Setarea caii imaginii selectate în proprietatea SelectedImagePath
                SelectedImagePath1 = destinationPath;
                numarClicuri++;

            }
           
        }
        private void ResetareControale()
        {
           
            txtID.Text=txtTip.Text =txtSOLD.Text= string.Empty;

        }
    }
}
